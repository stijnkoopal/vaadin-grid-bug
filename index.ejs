<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes">

        <!--
          Feature detect Custom Elements support. If the browser DOES support Custom
          Elements then we need to load the custom-elements-es5-adapter because
          our project code has been transpiled from ES2015 to ES5 and native Custom
          Elements expect elements will be registered as classes.
        -->
        <div id="ce-es5-shim">
            <script type="text/javascript">
              if (!window.customElements) {
                var ceShimContainer = document.querySelector('#ce-es5-shim');
                ceShimContainer.parentElement.removeChild(ceShimContainer);
              }
            </script>
            <script type="text/javascript"
                    src="/bower_components/webcomponentsjs/custom-elements-es5-adapter.js"></script>
        </div>
    </head>

    <body>
        <!--
          Use the webcomponents-loader script which will feature detect which Web
          Components features are missing and lazy load the appropriate polyfills.
          When we hear the 'WebComponentsReady' event from the polyfill bundle we can
          insert our 'bundle.js'.
        -->
        <script>
          (function() {
            document.addEventListener('WebComponentsReady', function componentsReady() {
              document.removeEventListener('WebComponentsReady', componentsReady, false);
              var script = document.createElement('script');
              script.src = '<%= htmlWebpackPlugin.files.chunks.main.entry %>';
              var refScript = document.getElementsByTagName('script')[0];
              refScript.parentNode.insertBefore(script, refScript);
            }, false);
          })();
        </script>
        <script src="/bower_components/webcomponentsjs/webcomponents-loader.js"></script>

        <vaadin-grid>
        </vaadin-grid>
    </body>
</html>
